


ARM Macro Assembler    Page 1 


    1 00000000         ;Write a program to add ten 32 bit numbers available in 
                       code memory and store 
    2 00000000         ;the result in data memory.
    3 00000000                 AREA             RESET,DATA,READONLY
    4 00000000                 EXPORT           __Vectors
    5 00000000         
    6 00000000         __Vectors
    7 00000000 10001000        DCD              0x10001000
    8 00000004 00000000        DCD              Reset_Handler
    9 00000008                 ALIGN
   10 00000008                 AREA             mycode,CODE,READONLY
   11 00000000                 ENTRY
   12 00000000                 EXPORT           Reset_Handler
   13 00000000         
   14 00000000         Reset_Handler
   15 00000000         ;Code
   16 00000000 4810            LDR              R0,=VALS
   17 00000002 F04F 010A       MOV              R1,#10
   18 00000006 F04F 0300       MOV              R3,#0
   19 0000000A         
   20 0000000A 4C0F            LDR              R4,=RESULT
   21 0000000C         LOOP
   22 0000000C F850 2B04       LDR              R2,[R0],#4
   23 00000010 4413            ADD              R3,R3,R2
   24 00000012         
   25 00000012 3901            SUBS             R1,#1
   26 00000014 D1FA            BNE              LOOP
   27 00000016         
   28 00000016 6023            STR              R3,[R4]
   29 00000018         
   30 00000018         STOP
   31 00000018 E7FE            B                STOP
   32 0000001A 00 00 00000010 
              00000020 
              00000030 
              00000040 
              00000050 
              00000060 
              00000070 
              00000080 
              00000090 
              00000100 VALS    DCD              0x10,0x20,0x30,0x40,0x50,0x60,0
x70,0x80,0x90,0x100
   33 00000044         
   34 00000044 00000000 
              00000000         AREA             mydata,DATA,READWRITE
   35 00000000 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 RESULT  DCD              0,0,0,0,0,0,0,0,0,0
   36 00000028                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\q1.d -
o.\q1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NX



ARM Macro Assembler    Page 2 


P\LPC17xx --predefine="__EVAL SETA 1" --list=.\q1.lst Week2\q1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 3 in file Week2\q1.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 6 in file Week2\q1.s
   Uses
      At line 4 in file Week2\q1.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LOOP 0000000C

Symbol: LOOP
   Definitions
      At line 21 in file Week2\q1.s
   Uses
      At line 26 in file Week2\q1.s
Comment: LOOP used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 14 in file Week2\q1.s
   Uses
      At line 8 in file Week2\q1.s
      At line 12 in file Week2\q1.s

STOP 00000018

Symbol: STOP
   Definitions
      At line 30 in file Week2\q1.s
   Uses
      At line 31 in file Week2\q1.s
Comment: STOP used once
VALS 0000001C

Symbol: VALS
   Definitions
      At line 32 in file Week2\q1.s
   Uses
      At line 16 in file Week2\q1.s
Comment: VALS used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 10 in file Week2\q1.s
   Uses
      None
Comment: mycode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESULT 00000000

Symbol: RESULT
   Definitions
      At line 35 in file Week2\q1.s
   Uses
      At line 20 in file Week2\q1.s
Comment: RESULT used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 34 in file Week2\q1.s
   Uses
      None
Comment: mydata unused
2 symbols
342 symbols in table
